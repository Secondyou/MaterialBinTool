# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Debug Build, Release, and Artifacts

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Gradle Wrapper
      run: chmod +x gradlew && ./gradlew shadowJar
    
    - name: Test Jars
      run: java -jar build/libs/MaterialBinTool-0.9.0_debug-all.jar
    
    - name: Create info file
      run: |
        echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
        > build/libs/info.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: MaterialBinTool_0.9.0-Debug
        path: |
          build/libs/MaterialBinTool-0.9.0_debug-all.jar
          build/libs/info.txt
        retention-days: 60

    - name: Get current date
      id: date
      run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: nightly
        release_name: Nightly Build ${{ steps.date.outputs.DATE }}
        draft: false
        prerelease: true

    - name: Upload Release Asset (JAR)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libs/MaterialBinTool-0.9.0_debug-all.jar
        asset_name: MaterialBinTool-0.9.0_debug-all.jar
        asset_content_type: application/java-archive

    - name: Upload Release Asset (Info)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/libs/info.txt
        asset_name: info.txt
        asset_content_type: text/plain
